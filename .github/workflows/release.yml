name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Setup Linux build environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libarchive-tools libasound2 libgtk-3-0 libx11-xcb1 libgconf-2-4 libnss3 libxss1 libxtst6 libglib2.0-0 rpm libasound2-dev libgconf-2-4
          sudo apt-get install -y gcc-multilib g++-multilib
          sudo apt-get install -y snapcraft
          sudo snap install core

      # - name: Semantic release # 使用 semantic-release 自动化发布
      #   uses: semantic-release/semantic-release@v19
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 设置 GitHub 令牌
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # 设置 npm 令牌
      # - name: Install system dependencies
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libarchive-tools libasound2 libgtk-3-0 libx11-xcb1

      # - name: Build/release Electron app
      #   uses: samuelmeuli/action-electron-builder@v1
      #   with:
      #     github_token: ${{ secrets.github_token }}
      #     release: ${{ startsWith(github.ref, 'refs/tags/v') }}
      #     # 如果没有证书，可以跳过签名
      #     skip_build: false
      #     use_vue_cli: false
      #     max_attempts: 3

      # - name: Setup Linux build environment
      #   if: matrix.os == 'ubuntu-latest'
      #   run: |
      #     sudo rm -rf /var/lib/apt/lists/*
      #     sudo apt-get update
      #     sudo apt-get install -y snapd rpm libopenjp2-tools
      #     sudo apt-get install -y --no-install-recommends libopenjp2-7
      #     sudo apt-get install -y libarchive-tools
      #     sudo apt-get install -y libgconf-2-4 libgtk-3-0
      #     sudo apt-get install -y libnss3 libxss1 libxtst6 libglib2.0-0
      #     sudo apt-get install -y libasound2 libx11-xcb1
      #     sudo snap install core
      #     sudo snap install snapcraft --classic
      #     sudo snap install lxd
      #     sudo lxd init --auto
      #     sudo usermod -a -G lxd $USER
      #     mkdir -p snap/local
      #     chmod +x snap/local/desktop-launch
      #     chmod +x node_modules/app-builder-bin/linux/x64/app-builder
      #     rm -rf ~/.cache/electron-builder
      #     rm -rf ~/.cache/electron
      #     mkdir -p $HOME/.cache/electron-builder
      #     sudo chown -R $USER:$USER $HOME/.cache/electron-builder

      - name: Setup macOS build environment
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p build
          security create-keychain -p dummy build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p dummy build.keychain
          security set-keychain-settings -t 3600 -u build.keychain

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo npm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p build
          npm run build:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}